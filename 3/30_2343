#include <iostream>
#include <vector>
#include <queue>
#include <stack>
#include <memory.h>
#include <algorithm>
using namespace std;


int arr[100'001];
int preSum[100'001];

int main()
{
	std::ios::sync_with_stdio(false);
	std::cin.tie(nullptr);
	std::cout.tie(nullptr);

	int n,m;
	cin >> n >>m;

	int sum = 0;
	int max = 0;
	int pre = 0;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
		sum += arr[i];
		if (max < arr[i])
			max = arr[i];
		//[0,i+1)
		preSum[i + 1] = preSum[i] + arr[i];
	}


	sort(arr, arr + n);

	//(begin,end]
	int begin = max-1;
	int end = sum;

	//begin == end-1면 종료. 
	while(begin  < end-1)
	{
		int mid = (begin + end) / 2;

		int packCount = 0;
		int packStart = 0;

		for(int i = 1; i <=n;i++)
		{
			if(preSum[i] - preSum[packStart] > mid)
			{
				packStart = i-1;
				packCount++;
			}
		}
		packCount++;




		if(packCount <= m)
		{
			end = mid;

		}
		else
		{
			begin = mid;
		}
	}
	cout << end;
}
