#include <algorithm>
#include <iostream>
#include <queue>
#include <stack>
#include <vector>
#pragma warning(disable:4996)

using namespace std;

int arr[5'000'000];
int result[5'000'000];
int n;
int k;

void merge(int begin, int end, int secStart)
{
	int i = begin;
	int j = secStart;
	int insertIndex = begin;

	while(i < secStart && j <= end)
	{
		if (arr[i] < arr[j])
		{
			result[insertIndex++] = arr[i++];
		}
		else
		{
			result[insertIndex++] = arr[j++];
		}
	}
	if (i == secStart)
	{
		while (j <= end)
		{
				result[insertIndex++] = arr[j++];
		}
	}
	else
	{
		while (i < secStart)
		{
			result[insertIndex++] = arr[i++];
		}
	}

	for (int i = begin; i <= end; i++)
	{
		arr[i] = result[i];
	}

}

void mergeSort(int begin, int end)
{
	if (begin >= end)
		return;

	auto half = (begin + end) / 2;

	mergeSort(begin, half);
	mergeSort(half + 1, end);

	merge(begin, end, half+1);

}

int main()
{
	std::ios::sync_with_stdio(false);
	std::cin.tie(nullptr);
	std::cout.tie(nullptr);

	cin >> n;

	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}


	mergeSort(0, n - 1);

	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << '\n';
	}

}