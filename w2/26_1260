#include <iostream>
#include <vector>
#include <queue>
using namespace std;
bool DFSvisit[1001];
bool BFSvisit[1001];

bool g[1001][1001];

int n, m, v;
void DFS(int cur)
{
	DFSvisit[cur] = true;

	cout<< cur<<" ";

	for (int i = 1; i <= n; i++)
	{
		if (g[cur][i] && !DFSvisit[i])
			DFS(i);
	}
}

queue<int> q;
void BFS()
{
	while (!q.empty())
	{
		int cur = q.front();
		q.pop();
		if (BFSvisit[cur] == true)
			continue;

		BFSvisit[cur] = true;
		cout<<cur <<" ";

		for (int i = 1; i <= n; i++)
		{
			if (g[cur][i] && !BFSvisit[i])
				q.push(i);
		}
	}
}

int main()
{
	std::ios::sync_with_stdio(false);
	std::cin.tie(nullptr);
	std::cout.tie(nullptr);




	cin >> n >> m >> v;

	while (m--)
	{
		int a, b;
		cin >> a >> b;

		g[a][b] = true;
		g[b][a] = true;
	}

	DFS(v);
	cout << "\n";
	q.push(v);
	BFS();
}
